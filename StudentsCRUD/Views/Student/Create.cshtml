@model StudentsCRUD.Models.StudentViewModel
@{
    /**/

    ViewBag.Title = "Create";
}

<h2 style="text-align:center;">Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, "First Name", htmlAttributes: new { @class = "control-label col-md-5", @style = "color: #333; font-size:22px;" })

            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, "Last Name", htmlAttributes: new { @class = "control-label col-md-5", @style = "color: #333; font-size:22px;" })

            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control col-md-offset-5" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Specialty, "Specialty", htmlAttributes: new { @class = "control-label col-md-5", @style = "color: #333; font-size:22px;" })

            @Html.ValidationMessageFor(model => model.Specialty, "", new { @class = "text-danger" })

            @{
                List<SelectListItem> listItems = new List<SelectListItem>();
                listItems.Add(new SelectListItem
                {
                    Text = "-- Select Specialty --",
                    Value = "-- Select Specialty --",
                    Selected = true
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Software technologies and design",
                    Value = "Software technologies and design"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Business IT",
                    Value = "Business IT",

                });
                listItems.Add(new SelectListItem
                {
                    Text = "Informatics",
                    Value = "Informatics"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Software engineering",
                    Value = "Software engineering"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Mathematics",
                    Value = "Mathematics"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Mathematics, Informatics and Information Technologies",
                    Value = "Mathematics, Informatics and Information Technologies"
                });
                listItems.Add(new SelectListItem
                {
                    Text = "Business Mathematics",
                    Value = "Business Mathematics"
                });

            }

            @Html.DropDownListFor(model => model.Specialty, listItems, new { @class = "form-control col-md-offset" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FacultyNumber, "Faculty Number", htmlAttributes: new { @class = "control-label col-md-5", @style = "color: #333; font-size:22px;" })

            @Html.EditorFor(model => model.FacultyNumber, new { htmlAttributes = new { @class = "form-control col-md-offset-5" } })
            @Html.ValidationMessageFor(model => model.FacultyNumber, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Username, "Username", htmlAttributes: new { @class = "control-label col-md-5", @style = "color: #333; font-size:22px;" })

            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control col-md-offset-5" } })
            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, "Password", htmlAttributes: new { @class = "control-label col-md-5", @style = "color: #333; font-size:22px;" })
            @Html.PasswordFor(model => model.Password, new { @class = "form-control col-md-offset-5" })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, "E-mail", htmlAttributes: new { @class = "control-label col-md-5", @style = "color: #333; font-size:22px;" })

            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control col-md-offset-5" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

        </div>

        <div class="form-group">
            <div class="col-md-offset-5 col-md-10">
                <input type="submit" value="Save" class="btn-success" style="border-radius:15px; background-color:#333; border-color:#333; height:2.5em; width:5em;" />

                <button class="btn-default" style="border-radius:15px; height:2.5em; width:5em;">
                    @Html.ActionLink("Cancel", "Index", "Student")
                </button>
            </div>
        </div>
    </div>

}
